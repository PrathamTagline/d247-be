version: '3.8'

services:
  redis:
    image: "redis:latest"
    container_name: "redis"
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    restart: always

  db:
    image: postgres:14
    container_name: d247-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./db_data:/var/lib/postgresql/data

  web:
    build: .
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER:  ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: db   # ðŸ‘ˆ matches service name
      POSTGRES_PORT: 5432

  celery:
    build: .
    container_name: celery_worker
    command: celery -A backend worker --loglevel=info --pool=solo
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=redis://redis:6380/0
      - CELERY_RESULT_BACKEND=redis://redis:6380/0
  beat:
    build: .
    container_name: celery_beat
    command: celery -A backend beat --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=redis://redis:6380/0
      - CELERY_RESULT_BACKEND=redis://redis:6380/0